{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shammymeatsix\\\\Documents\\\\GitHub\\\\dig4639-mobile-dev\\\\labs\\\\6\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport questions from \"./components/questions/questions.json\";\nvar TIME_LIMIT = 5;\nvar TITLE_STATE = 0;\nvar QUESTION_STATE = 1;\nvar FINAL_STATE = 2;\n\nvar QuizQuestion = function (_React$Component) {\n  _inherits(QuizQuestion, _React$Component);\n\n  var _super = _createSuper(QuizQuestion);\n\n  function QuizQuestion() {\n    _classCallCheck(this, QuizQuestion);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuizQuestion, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, this.props.question), this.props.answers.map(function (v, i) {\n        return React.createElement(Button, {\n          title: v.text,\n          buttonStyle: styles.button,\n          onPress: function onPress() {\n            return _this.props.nextQuestion(v.correct);\n          },\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        });\n      }));\n    }\n  }]);\n\n  return QuizQuestion;\n}(React.Component);\n\nvar LandingPage = function (_React$Component2) {\n  _inherits(LandingPage, _React$Component2);\n\n  var _super2 = _createSuper(LandingPage);\n\n  function LandingPage(props) {\n    var _this2;\n\n    _classCallCheck(this, LandingPage);\n\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      score: 0,\n      titleText: \"Answer these questions because I made them\",\n      counter: 0,\n      currentState: TITLE_STATE,\n      currentQuestion: 0\n    };\n    _this2.timeLimit = TIME_LIMIT;\n    return _this2;\n  }\n\n  _createClass(LandingPage, [{\n    key: \"nextQuestion\",\n    value: function nextQuestion(correct) {\n      console.log(\"QUESTION ANSWERED\");\n\n      if (correct) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      if (this.state.currentQuestion == questions.length - 1) {\n        console.log(\"ANSWERS RECORDED\");\n        this.setState({\n          currentState: FINAL_STATE\n        });\n      } else {\n        clearInterval(this.timer);\n        console.log(this.state.currentQuestion);\n        this.setState({\n          titleText: \"You answered X\",\n          currentState: QUESTION_STATE,\n          currentQuestion: this.state.currentQuestion + 1\n        });\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      console.log(\"Booting up\");\n      this.setState({\n        titleText: \"Booting up the Quiz\",\n        counter: 0,\n        currentState: QUESTION_STATE\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.timer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, this.timeLimit - this.state.counter), this.state.currentState === TITLE_STATE ? React.createElement(React.Fragment, null, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, this.state.titleText), React.createElement(Button, {\n        buttonStyle: styles.button,\n        title: \"Click here to begin\",\n        onPress: function onPress() {\n          return _this3.start();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      })) : React.createElement(QuizQuestion, {\n        answers: questions[this.state.currentQuestion].answerOptions,\n        question: questions[this.state.currentQuestion].question,\n        nextQuestion: function nextQuestion(correct) {\n          return _this3.nextQuestion(correct);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, \"Score: \", this.state.score));\n    }\n  }]);\n\n  return LandingPage;\n}(React.Component);\n\nfunction App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(LandingPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    textAlign: 'center',\n    borderColor: '#52e378',\n    backgroundColor: '#3b1954'\n  }\n});","map":{"version":3,"sources":["C:/Users/Shammymeatsix/Documents/GitHub/dig4639-mobile-dev/labs/6/App.js"],"names":["React","questions","TIME_LIMIT","TITLE_STATE","QUESTION_STATE","FINAL_STATE","QuizQuestion","styles","container","text","props","question","answers","map","v","i","button","nextQuestion","correct","Component","LandingPage","state","score","titleText","counter","currentState","currentQuestion","timeLimit","console","log","setState","length","clearInterval","timer","start","answerOptions","App","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","textAlign","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport questions from \"./components/questions/questions.json\";\n\nconst TIME_LIMIT = 5\nconst TITLE_STATE = 0\nconst QUESTION_STATE = 1\nconst FINAL_STATE = 2\n\nclass QuizQuestion extends React.Component{\n  render(){\n    return(\n      <View style ={styles.container}>\n        <Text style = {styles.text}>{this.props.question}</Text>\n        {this.props.answers.map((v,i)=>\n        <Button title = {v.text} buttonStyle = {styles.button} onPress = {()=> this.props.nextQuestion(v.correct)} key = {i}></Button>)}\n      </View>\n    )\n  }\n}\n\nclass LandingPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      score: 0,\n      titleText: \"Answer these questions because I made them\",\n      counter: 0,\n      currentState: TITLE_STATE,\n      currentQuestion: 0\n    }\n    this.timeLimit = TIME_LIMIT;\n  }\n  nextQuestion(correct){\n    console.log(\"QUESTION ANSWERED\")\n\n    if(correct){\n      this.setState({score: this.state.score + 1})\n    }\n    if(this.state.currentQuestion == questions.length - 1){\n        console.log(\"ANSWERS RECORDED\")\n        this.setState({currentState: FINAL_STATE})\n    } else{\n      clearInterval(this.timer)\n      console.log(this.state.currentQuestion)\n      this.setState({\n        titleText: \"You answered X\",\n        currentState: QUESTION_STATE,\n              currentQuestion: this.state.currentQuestion + 1\n      })\n    }\n  }\n  // countdown(){\n  //   console.log(\"Handling\")\n  //   console.log(this.state.counter)\n  //   if(this.state.counter < this.timeLimit){\n  //     this.setState({\n  //       titleText: \"Counting Down\",\n  //       counter: this.state.counter + 1\n  //     })\n  //   }else{\n  //     this.setState({\n  //       titleText: \"Let's begin\", \n  //       currentState: QUESTION_STATE,\n  //       counter: 0\n  //     })\n  //     if(this.state.currentState == TITLE_STATE){\n  //       this.timer = setInterval(()=> this.countdown(), 1000)\n  //     }\n  //   }\n\n  // }\n  start(){\n    //prop name: value\n    console.log(\"Booting up\")\n    this.setState({titleText: \"Booting up the Quiz\", counter: 0, currentState: QUESTION_STATE})\n    // this.timer = setInterval(()=> this.countdown(), 1000)\n\n  }\n  render(){\n    return(\n      <View style ={styles.container}>\n        <Text style={styles.timer}>{this.timeLimit - this.state.counter}</Text>\n        {((this.state.currentState === TITLE_STATE) ? \n        //div like\n        <>\n        <Text style = {styles.text}>{this.state.titleText}</Text>\n\n        <Button buttonStyle = {styles.button} title= \"Click here to begin\" onPress ={() => this.start()}/>\n        </>\n        :\n        <QuizQuestion answers= {questions[this.state.currentQuestion].answerOptions}  \n        question={questions[this.state.currentQuestion].question}\n        //if the user answers correctly, proceed to the next question\n        nextQuestion= {(correct)=> this.nextQuestion(correct)}></QuizQuestion>)}\n        <Text style={styles.score}>\n          Score: {this.state.score}\n        </Text>\n      </View>\n    )\n  }\n}\n\n\nfunction App() {\n  //no objects in react\n  return (\n    <View style={styles.container}>\n      <LandingPage></LandingPage>\n      \n    </View>\n  );\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button:{\n    textAlign: 'center',\n    borderColor: '#52e378',\n    backgroundColor: '#3b1954'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}