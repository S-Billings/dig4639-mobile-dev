{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shammymeatsix\\\\Documents\\\\GitHub\\\\dig4639-mobile-dev\\\\labs\\\\6\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport questions from \"./components/questions/questions.json\";\nvar TIME_LIMIT = 5;\nvar TITLE_STATE = 0;\nvar QUESTION_STATE = 1;\nvar FINAL_STATE = 2;\n\nvar QuizQuestion = function (_React$Component) {\n  _inherits(QuizQuestion, _React$Component);\n\n  var _super = _createSuper(QuizQuestion);\n\n  function QuizQuestion() {\n    _classCallCheck(this, QuizQuestion);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuizQuestion, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, this.props.question), this.props.answers.map(function (v, i) {\n        return React.createElement(Button, {\n          title: v.text,\n          onPress: function onPress() {\n            return _this.props.nextQuestion(v.correct);\n          },\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        });\n      }));\n    }\n  }]);\n\n  return QuizQuestion;\n}(React.Component);\n\nvar LandingPage = function (_React$Component2) {\n  _inherits(LandingPage, _React$Component2);\n\n  var _super2 = _createSuper(LandingPage);\n\n  function LandingPage(props) {\n    var _this2;\n\n    _classCallCheck(this, LandingPage);\n\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      score: 0,\n      titleText: \"Answer these questions because I made them\",\n      currentState: TITLE_STATE,\n      currentQuestion: 0,\n      questionIndices: [0, 1, 2, 3, 4]\n    };\n    return _this2;\n  }\n\n  _createClass(LandingPage, [{\n    key: \"nextQuestion\",\n    value: function nextQuestion(correct) {\n      console.log(\"QUESTION ANSWERED\");\n\n      if (correct) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      if (this.state.questionIndices.length === 0) {\n        console.log(\"ANSWERS RECORDED\");\n        this.setState({\n          currentState: FINAL_STATE\n        });\n      } else {\n        clearInterval(this.timer);\n        console.log(this.state.currentQuestion);\n        var index = Math.floor(Math.random() * this.state.questionIndices.length);\n        var questionNumber = this.state.questionIndices[index];\n        var newArray = this.state.questionIndices.filter(function (v, i) {\n          return index != i;\n        });\n        this.setState({\n          titleText: \"You answered X\",\n          currentState: QUESTION_STATE,\n          currentQuestion: questionNumber,\n          questionIndices: newArray\n        });\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      console.log(\"Booting up\");\n      var array = questions.map(function (v, i) {\n        return i;\n      });\n      var index = Math.floor(Math.random() * array.length);\n      var questionNumber = array[index];\n      var newArray = array.filter(function (v, i) {\n        return index != i;\n      });\n      this.setState({\n        titleText: \"Booting up the Quiz\",\n        counter: 0,\n        currentState: QUESTION_STATE,\n        currentQuestion: questionNumber,\n        questionIndices: newArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.timer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, this.timeLimit - this.state.counter), this.state.currentState === TITLE_STATE ? React.createElement(React.Fragment, null, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, this.state.titleText), React.createElement(Button, {\n        title: \"Click here to begin\",\n        color: \"#8EA8C3\",\n        padding: \"5\",\n        onPress: function onPress() {\n          return _this3.start();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })) : this.state.currentState === QUESTION_STATE ? React.createElement(QuizQuestion, {\n        answers: questions[this.state.currentQuestion].answerOptions,\n        question: questions[this.state.currentQuestion].question,\n        nextQuestion: function nextQuestion(correct) {\n          return _this3.nextQuestion(correct);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }) : React.createElement(Button, {\n        title: \"Click here to restart\",\n        color: \"#8EA8C3\",\n        onPress: function onPress() {\n          return _this3.start();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, \"Score: \", this.state.score));\n    }\n  }]);\n\n  return LandingPage;\n}(React.Component);\n\nfunction App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, React.createElement(LandingPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#CC7178',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5,\n    borderRadius: 50\n  },\n  score: {\n    fontSize: 25,\n    padding: 5,\n    margin: 10,\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    margin: 10,\n    padding: 5,\n    fontStyle: 'helvetica'\n  }\n});","map":{"version":3,"sources":["C:/Users/Shammymeatsix/Documents/GitHub/dig4639-mobile-dev/labs/6/App.js"],"names":["React","questions","TIME_LIMIT","TITLE_STATE","QUESTION_STATE","FINAL_STATE","QuizQuestion","styles","container","text","props","question","answers","map","v","i","nextQuestion","correct","Component","LandingPage","state","score","titleText","currentState","currentQuestion","questionIndices","console","log","setState","length","clearInterval","timer","index","Math","floor","random","questionNumber","newArray","filter","array","counter","timeLimit","start","answerOptions","App","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","margin","borderRadius","fontSize","padding","color","fontWeight","fontStyle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,SAAP;AAEA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,cAAc,GAAG,CAAvB;AACA,IAAMC,WAAW,GAAG,CAApB;;IAEMC,Y;;;;;;;;;;;;;6BACI;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKC,KAAL,CAAWC,QAAtC,CADF,EAEG,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,CAAD,EAAGC,CAAH;AAAA,eACxB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAED,CAAC,CAACL,IAAjB;AACE,UAAA,OAAO,EAAE;AAAA,mBAAK,KAAI,CAACC,KAAL,CAAWM,YAAX,CAAwBF,CAAC,CAACG,OAA1B,CAAL;AAAA,WADX;AAEE,UAAA,GAAG,EAAEF,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAvB,CAFH,CADF;AASD;;;;EAXwBf,KAAK,CAACkB,S;;IAc3BC,W;;;;;AACJ,uBAAYT,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,gCAAMA,KAAN;AACA,WAAKU,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,SAAS,EAAE,4CAFA;AAIXC,MAAAA,YAAY,EAAEpB,WAJH;AAKXqB,MAAAA,eAAe,EAAE,CALN;AAMXC,MAAAA,eAAe,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT;AANN,KAAb;AAFgB;AAUjB;;;;iCACYR,O,EAAQ;AACnBS,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAEA,UAAGV,OAAH,EAAW;AACT,aAAKW,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,SAAd;AACD;;AACD,UAAG,KAAKD,KAAL,CAAWK,eAAX,CAA2BI,MAA3B,KAAsC,CAAzC,EAA2C;AACvCH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKC,QAAL,CAAc;AAACL,UAAAA,YAAY,EAAElB;AAAf,SAAd;AACH,OAHD,MAGM;AACJyB,QAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWI,eAAvB;AACA,YAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKf,KAAL,CAAWK,eAAX,CAA2BI,MAAtD,CAAd;AACA,YAAMO,cAAc,GAAG,KAAKhB,KAAL,CAAWK,eAAX,CAA2BO,KAA3B,CAAvB;AACA,YAAMK,QAAQ,GAAG,KAAKjB,KAAL,CAAWK,eAAX,CAA2Ba,MAA3B,CACb,UAACxB,CAAD,EAAIC,CAAJ;AAAA,iBAAUiB,KAAK,IAAIjB,CAAnB;AAAA,SADa,CAAjB;AAEA,aAAKa,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE,gBADC;AAEZC,UAAAA,YAAY,EAAEnB,cAFF;AAGZoB,UAAAA,eAAe,EAAEY,cAHL;AAIZX,UAAAA,eAAe,EAAEY;AAJL,SAAd;AAMD;AACF;;;4BAEM;AAELX,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMY,KAAK,GAAGtC,SAAS,CAACY,GAAV,CAAc,UAACC,CAAD,EAAGC,CAAH,EAAS;AACnC,eAAOA,CAAP;AACD,OAFa,CAAd;AAGA,UAAMiB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBI,KAAK,CAACV,MAAjC,CAAd;AACA,UAAMO,cAAc,GAAGG,KAAK,CAACP,KAAD,CAA5B;AACA,UAAMK,QAAQ,GAAGE,KAAK,CAACD,MAAN,CACf,UAACxB,CAAD,EAAIC,CAAJ;AAAA,eAAUiB,KAAK,IAAIjB,CAAnB;AAAA,OADe,CAAjB;AAEA,WAAKa,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE,qBADC;AAEZkB,QAAAA,OAAO,EAAE,CAFG;AAGZjB,QAAAA,YAAY,EAAEnB,cAHF;AAIZoB,QAAAA,eAAe,EAAEY,cAJL;AAKZX,QAAAA,eAAe,EAAEY;AALL,OAAd;AASD;;;6BAEO;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG9B,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACwB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKU,SAAL,GAAiB,KAAKrB,KAAL,CAAWoB,OAAxD,CADF,EAEK,KAAKpB,KAAL,CAAWG,YAAX,KAA4BpB,WAA7B,GAEF,0CACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAII,MAAM,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKW,KAAL,CAAWE,SAAxC,CADF,EAEE,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,qBADP;AAEA,QAAA,KAAK,EAAE,SAFP;AAGA,QAAA,OAAO,EAAG,GAHV;AAIA,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACoB,KAAL,EAAN;AAAA,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFE,GAWC,KAAKtB,KAAL,CAAWG,YAAX,KAA4BnB,cAA7B,GACI,oBAAC,YAAD;AACF,QAAA,OAAO,EAAGH,SAAS,CAAC,KAAKmB,KAAL,CAAWI,eAAZ,CAAT,CAAsCmB,aAD9C;AAEF,QAAA,QAAQ,EAAE1C,SAAS,CAAC,KAAKmB,KAAL,CAAWI,eAAZ,CAAT,CAAsCb,QAF9C;AAIF,QAAA,YAAY,EAAG,sBAACM,OAAD;AAAA,iBAAY,MAAI,CAACD,YAAL,CAAkBC,OAAlB,CAAZ;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAQE,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,uBADP;AAEA,QAAA,KAAK,EAAE,SAFP;AAGA,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACyB,KAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBN,EA0BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnC,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKD,KAAL,CAAWC,KADrB,CA1BF,CADF;AAgCD;;;;EA3FuBrB,KAAK,CAACkB,S;;AA+FhC,SAAS0B,GAAT,GAAe;AAEb,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AACD,eAAeoC,GAAf;AAEA,IAAMrC,MAAM,GAAGsC,UAAU,CAACC,MAAX,CAAkB;AAC/BtC,EAAAA,SAAS,EAAE;AACTuC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,MAAM,EAAE,CALC;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS/B/B,EAAAA,KAAK,EAAC;AACJgC,IAAAA,QAAQ,EAAC,EADL;AAEJC,IAAAA,OAAO,EAAE,CAFL;AAGJH,IAAAA,MAAM,EAAE,EAHJ;AAIJI,IAAAA,KAAK,EAAC;AAJF,GATyB;AAkB/B9C,EAAAA,IAAI,EAAC;AACH4C,IAAAA,QAAQ,EAAE,EADP;AAEHE,IAAAA,KAAK,EAAE,OAFJ;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHL,IAAAA,MAAM,EAAE,EAJL;AAKHG,IAAAA,OAAO,EAAE,CALN;AAMHG,IAAAA,SAAS,EAAE;AANR;AAlB0B,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport questions from \"./components/questions/questions.json\";\n\nconst TIME_LIMIT = 5\nconst TITLE_STATE = 0\nconst QUESTION_STATE = 1\nconst FINAL_STATE = 2\n\nclass QuizQuestion extends React.Component{\n  render(){\n    return(\n      <View style={styles.container}>\n        <Text style={styles.text}>{this.props.question}</Text>\n        {this.props.answers.map((v,i)=>\n        <Button title={v.text} \n          onPress={()=> this.props.nextQuestion(v.correct)} \n          key={i}></Button>)}\n      </View>\n    )\n  }\n}\n\nclass LandingPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      score: 0,\n      titleText: \"Answer these questions because I made them\",\n      \n      currentState: TITLE_STATE,\n      currentQuestion: 0,\n      questionIndices: [0,1,2,3,4]\n    }\n  }\n  nextQuestion(correct){\n    console.log(\"QUESTION ANSWERED\")\n\n    if(correct){\n      this.setState({score: this.state.score + 1})\n    }\n    if(this.state.questionIndices.length === 0){\n        console.log(\"ANSWERS RECORDED\")\n        this.setState({currentState: FINAL_STATE})\n    } else{\n      clearInterval(this.timer)\n      console.log(this.state.currentQuestion)\n      const index = Math.floor(Math.random() * this.state.questionIndices.length)\n      const questionNumber = this.state.questionIndices[index]\n      const newArray = this.state.questionIndices.filter(\n          (v, i) => index != i)\n      this.setState({\n        titleText: \"You answered X\",\n        currentState: QUESTION_STATE,\n        currentQuestion: questionNumber,\n        questionIndices: newArray\n      })\n    }\n  }\n\n  start(){\n    //prop name: value\n    console.log(\"Booting up\")\n    const array = questions.map((v,i) => {\n      return i\n    })\n    const index = Math.floor(Math.random() * array.length)\n    const questionNumber = array[index]\n    const newArray = array.filter(\n      (v, i) => index != i)\n    this.setState({\n      titleText: \"Booting up the Quiz\", \n      counter: 0, \n      currentState: QUESTION_STATE, \n      currentQuestion: questionNumber, \n      questionIndices: newArray \n    })\n    \n\n  }\n  \n  render(){\n    return(\n      <View style ={styles.container}>\n        <Text style={styles.timer}>{this.timeLimit - this.state.counter}</Text>\n        {((this.state.currentState === TITLE_STATE) \n        ? \n        <>\n          <Text style = {styles.text}>{this.state.titleText}</Text>\n          <Button \n          title= \"Click here to begin\" \n          color =\"#8EA8C3\"\n          padding = '5'\n          onPress ={() => this.start()}/>\n        </>\n        :\n          (this.state.currentState === QUESTION_STATE) \n            ? <QuizQuestion \n            answers= {questions[this.state.currentQuestion].answerOptions}  \n            question={questions[this.state.currentQuestion].question}\n            //if the user answers correctly, proceed to the next question\n            nextQuestion= {(correct)=> this.nextQuestion(correct)\n            }/>\n            : \n            <Button \n            title= \"Click here to restart\" \n            color =\"#8EA8C3\"\n            onPress ={() => this.start()}/>\n        )}\n        <Text style={styles.score}>\n          Score: {this.state.score}\n        </Text>\n      </View>\n    )\n  }\n}\n\n\nfunction App() {\n  //no objects in react\n  return (\n    <View style={styles.container}>\n      <LandingPage></LandingPage>\n      \n    </View>\n  );\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#CC7178',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5,\n    borderRadius: 50\n  },\n  score:{\n    fontSize:25,\n    padding: 5,\n    margin: 10,\n    color:'white',\n   \n\n\n  },\n  text:{\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    margin: 10, \n    padding: 5,\n    fontStyle: 'helvetica'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}